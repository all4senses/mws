<?php

/**
 * @file
 * Module contained miscelanious helper functions and hooks.
 */


/**
 * Implements hook_menu().
 */
function mws_commerce_menu() {
 
  $items['test'] = array(
    'title' => 'Test page',
    'page callback' => 'mws_commerce_testPage',
    'access arguments' => array('administer content'),
    'type' => MENU_CALLBACK,
  ); 

  return $items;
  
}


/**
 * Test page.
 */
function mws_commerce_testPage() {
  $out = '<div>Test starts</div>';
  
  $out .= '<div>Test ends</div>';
  
  return $out;
}


/**
 * Implements hook_token_info().
 */
function mws_commerce_token_info() {
  // Defines new token 'Provider name' in the node torens group.
  $info['tokens']['node']['node-term-siblings'] = array(
    'name' => t('Node term siblings'),
    'description' => t('First Node siblings'),
  );

  return $info;
}


/**
 * Implements hook_tokens().
 * 
 * Provides token for a current review's provider name. It set to selected from a list or from a manually filled field (if not selected from a list).
 */
function mws_commerce_tokens($type, $tokens, array $data = array(), array $options = array()) {
  $replacements = array();
  $sanitize = !empty($options['sanitize']);

  // Add new token 'provider-name-for-current-review' to a 'node' tokens group.
  if ($type == 'node' && !empty($data['node'])) {
    $node = $data['node'];

    foreach ($tokens as $name => $original) {
      switch ($name) {
        case 'node-term-siblings':
          
          $term_children = taxonomy_get_children($node->field_category['und'][0]['taxonomy_term']->tid, $node->field_category['und'][0]['taxonomy_term']->vid);

          $replacements[$original] = '';
          foreach($term_children as $term_child) {
            $replacements[$original] .= ($replacements[$original] ? '+' . $term_child->tid : $term_child->tid);
          }
          
          break;
      }
    }
  }
  
  return $replacements;
}
